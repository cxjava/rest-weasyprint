# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com

# The lines below are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/need to use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 2

before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    - go generate ./...

builds:
  - env:
      - CGO_ENABLED=0
    main: ./cmd
    ldflags:
      - "-s -w"
      - -X 'main.Version={{.Version}}'
      - -X 'main.Commit={{.FullCommit}}'
      - -X 'main.RepoUrl={{.GitURL}}'
      - -X 'main.BuildDate={{.Date}}'
      - -X 'main.BuiltWithGoVersion={{.Env.GOLANG_VERSION}}'
      - -X 'main.BuiltBy={{.Env.BUILT_BY}}'
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64

archives:
  - formats: [tar.gz]
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        formats: [zip]

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"

release:
  draft: true
  replace_existing_draft: true
  prerelease: auto
  name_template: "{{.ProjectName}}-v{{.Version}}-{{.Date}}"
  footer: >-

    ---

    Released by [GoReleaser](https://github.com/goreleaser/goreleaser).


checksum:
  name_template: "checksums.txt"

dockers:
  - id: amd64
    goos: linux
    goarch: amd64
    dockerfile: Dockerfile
    extra_files:
      - packages/
    image_templates:
      - "ghcr.io/cxjava/{{ .ProjectName }}:{{ .Version }}-amd64"
      - "ghcr.io/cxjava/{{ .ProjectName }}:latest-amd64"
    build_flag_templates:
      - "--pull"
      - "--platform=linux/amd64"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.description={{.ProjectName}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
  - id: arm64
    goos: linux
    goarch: arm64
    dockerfile: Dockerfile
    extra_files:
      - packages/
    image_templates:
      - "ghcr.io/cxjava/{{ .ProjectName }}:{{ .Version }}-arm64"
      - "ghcr.io/cxjava/{{ .ProjectName }}:latest-arm64"
    build_flag_templates:
      - "--pull"
      - "--platform=linux/arm64"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.description={{.ProjectName}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"

docker_manifests:
  - name_template: ghcr.io/cxjava/{{ .ProjectName }}:{{ .Version }}
    image_templates:
      - ghcr.io/cxjava/{{ .ProjectName }}:{{ .Version }}-amd64
      - ghcr.io/cxjava/{{ .ProjectName }}:{{ .Version }}-arm64
  - name_template: ghcr.io/cxjava/{{ .ProjectName }}:latest
    image_templates:
      - ghcr.io/cxjava/{{ .ProjectName }}:{{ .Version }}-amd64
      - ghcr.io/cxjava/{{ .ProjectName }}:{{ .Version }}-arm64